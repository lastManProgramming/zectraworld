<?php

namespace Proxies\__CG__\ZectranetBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class HFForum extends \ZectranetBundle\Entity\HFForum implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'id', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'ownerID', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'owner', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'users', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'officeID', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'office', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'headers', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'name', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'shared', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'created', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'logs', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'archived', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'requests');
        }

        return array('__isInitialized__', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'id', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'ownerID', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'owner', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'users', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'officeID', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'office', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'headers', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'name', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'shared', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'created', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'logs', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'archived', '' . "\0" . 'ZectranetBundle\\Entity\\HFForum' . "\0" . 'requests');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (HFForum $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getInArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInArray', array());

        return parent::getInArray();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwnerID($ownerID)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwnerID', array($ownerID));

        return parent::setOwnerID($ownerID);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwnerID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwnerID', array());

        return parent::getOwnerID();
    }

    /**
     * {@inheritDoc}
     */
    public function setShared($shared)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShared', array($shared));

        return parent::setShared($shared);
    }

    /**
     * {@inheritDoc}
     */
    public function getShared()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShared', array());

        return parent::getShared();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner(\ZectranetBundle\Entity\User $owner = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', array($owner));

        return parent::setOwner($owner);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', array());

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated($created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', array($created));

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', array());

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function addHeader(\ZectranetBundle\Entity\HFHeader $headers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addHeader', array($headers));

        return parent::addHeader($headers);
    }

    /**
     * {@inheritDoc}
     */
    public function removeHeader(\ZectranetBundle\Entity\HFHeader $headers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeHeader', array($headers));

        return parent::removeHeader($headers);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeaders()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeaders', array());

        return parent::getHeaders();
    }

    /**
     * {@inheritDoc}
     */
    public function setOfficeID($officeID)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOfficeID', array($officeID));

        return parent::setOfficeID($officeID);
    }

    /**
     * {@inheritDoc}
     */
    public function getOfficeID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOfficeID', array());

        return parent::getOfficeID();
    }

    /**
     * {@inheritDoc}
     */
    public function setOffice(\ZectranetBundle\Entity\Office $office = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOffice', array($office));

        return parent::setOffice($office);
    }

    /**
     * {@inheritDoc}
     */
    public function getOffice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOffice', array());

        return parent::getOffice();
    }

    /**
     * {@inheritDoc}
     */
    public function addUser(\ZectranetBundle\Entity\User $users)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUser', array($users));

        return parent::addUser($users);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUser(\ZectranetBundle\Entity\User $users)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUser', array($users));

        return parent::removeUser($users);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsers', array());

        return parent::getUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function addLog(\ZectranetBundle\Entity\HFLog $logs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLog', array($logs));

        return parent::addLog($logs);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLog(\ZectranetBundle\Entity\HFLog $logs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLog', array($logs));

        return parent::removeLog($logs);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogs', array());

        return parent::getLogs();
    }

    /**
     * {@inheritDoc}
     */
    public function setArchived($archived)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArchived', array($archived));

        return parent::setArchived($archived);
    }

    /**
     * {@inheritDoc}
     */
    public function getArchived()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArchived', array());

        return parent::getArchived();
    }

    /**
     * {@inheritDoc}
     */
    public function addRequest(\ZectranetBundle\Entity\Request $requests)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRequest', array($requests));

        return parent::addRequest($requests);
    }

    /**
     * {@inheritDoc}
     */
    public function getRequests()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRequests', array());

        return parent::getRequests();
    }

}
