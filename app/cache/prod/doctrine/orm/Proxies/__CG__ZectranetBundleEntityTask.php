<?php

namespace Proxies\__CG__\ZectranetBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Task extends \ZectranetBundle\Entity\Task implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'id', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'name', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'description', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'progress', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'estimatedHours', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'estimatedMinutes', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'startdate', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'enddate', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'typeid', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'type', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'parentid', 'parent', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'subtasks', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'projectid', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'project', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'versionid', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'version', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'assignedid', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'assigned', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'priotityid', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'priority', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'statusid', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'status', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'posts', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'sprintid', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'sprint', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'ownerid', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'owner', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'logs');
        }

        return array('__isInitialized__', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'id', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'name', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'description', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'progress', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'estimatedHours', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'estimatedMinutes', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'startdate', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'enddate', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'typeid', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'type', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'parentid', 'parent', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'subtasks', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'projectid', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'project', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'versionid', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'version', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'assignedid', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'assigned', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'priotityid', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'priority', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'statusid', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'status', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'posts', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'sprintid', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'sprint', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'ownerid', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'owner', '' . "\0" . 'ZectranetBundle\\Entity\\Task' . "\0" . 'logs');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Task $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setProgress($progress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProgress', array($progress));

        return parent::setProgress($progress);
    }

    /**
     * {@inheritDoc}
     */
    public function getProgress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProgress', array());

        return parent::getProgress();
    }

    /**
     * {@inheritDoc}
     */
    public function setEstimatedHours($estimatedHours)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEstimatedHours', array($estimatedHours));

        return parent::setEstimatedHours($estimatedHours);
    }

    /**
     * {@inheritDoc}
     */
    public function getEstimatedHours()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEstimatedHours', array());

        return parent::getEstimatedHours();
    }

    /**
     * {@inheritDoc}
     */
    public function setEstimatedMinutes($estimatedMinutes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEstimatedMinutes', array($estimatedMinutes));

        return parent::setEstimatedMinutes($estimatedMinutes);
    }

    /**
     * {@inheritDoc}
     */
    public function getEstimatedMinutes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEstimatedMinutes', array());

        return parent::getEstimatedMinutes();
    }

    /**
     * {@inheritDoc}
     */
    public function setStartdate($startdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartdate', array($startdate));

        return parent::setStartdate($startdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartdate', array());

        return parent::getStartdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnddate($enddate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnddate', array($enddate));

        return parent::setEnddate($enddate);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnddate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnddate', array());

        return parent::getEnddate();
    }

    /**
     * {@inheritDoc}
     */
    public function setTypeid($typeid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTypeid', array($typeid));

        return parent::setTypeid($typeid);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypeid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypeid', array());

        return parent::getTypeid();
    }

    /**
     * {@inheritDoc}
     */
    public function setParentid($parentid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParentid', array($parentid));

        return parent::setParentid($parentid);
    }

    /**
     * {@inheritDoc}
     */
    public function getParentid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParentid', array());

        return parent::getParentid();
    }

    /**
     * {@inheritDoc}
     */
    public function setProjectid($projectid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProjectid', array($projectid));

        return parent::setProjectid($projectid);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectid', array());

        return parent::getProjectid();
    }

    /**
     * {@inheritDoc}
     */
    public function setAssignedid($assignedid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAssignedid', array($assignedid));

        return parent::setAssignedid($assignedid);
    }

    /**
     * {@inheritDoc}
     */
    public function getAssignedid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssignedid', array());

        return parent::getAssignedid();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriotityid($priotityid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriotityid', array($priotityid));

        return parent::setPriotityid($priotityid);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriotityid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriotityid', array());

        return parent::getPriotityid();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatusid($statusid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatusid', array($statusid));

        return parent::setStatusid($statusid);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusid', array());

        return parent::getStatusid();
    }

    /**
     * {@inheritDoc}
     */
    public function setSprintid($sprintid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSprintid', array($sprintid));

        return parent::setSprintid($sprintid);
    }

    /**
     * {@inheritDoc}
     */
    public function getSprintid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSprintid', array());

        return parent::getSprintid();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwnerid($ownerid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwnerid', array($ownerid));

        return parent::setOwnerid($ownerid);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwnerid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwnerid', array());

        return parent::getOwnerid();
    }

    /**
     * {@inheritDoc}
     */
    public function setType(\ZectranetBundle\Entity\TaskType $type = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', array($type));

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', array());

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setParent(\ZectranetBundle\Entity\Task $parent = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', array($parent));

        return parent::setParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function getParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', array());

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setProject(\ZectranetBundle\Entity\Project $project = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProject', array($project));

        return parent::setProject($project);
    }

    /**
     * {@inheritDoc}
     */
    public function getProject()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProject', array());

        return parent::getProject();
    }

    /**
     * {@inheritDoc}
     */
    public function setAssigned(\ZectranetBundle\Entity\User $assigned = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAssigned', array($assigned));

        return parent::setAssigned($assigned);
    }

    /**
     * {@inheritDoc}
     */
    public function getAssigned()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssigned', array());

        return parent::getAssigned();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriority(\ZectranetBundle\Entity\TaskPriority $priority = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriority', array($priority));

        return parent::setPriority($priority);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriority()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriority', array());

        return parent::getPriority();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus(\ZectranetBundle\Entity\TaskStatus $status = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function addPost(\ZectranetBundle\Entity\TaskPost $posts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPost', array($posts));

        return parent::addPost($posts);
    }

    /**
     * {@inheritDoc}
     */
    public function removePost(\ZectranetBundle\Entity\TaskPost $posts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePost', array($posts));

        return parent::removePost($posts);
    }

    /**
     * {@inheritDoc}
     */
    public function getPosts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosts', array());

        return parent::getPosts();
    }

    /**
     * {@inheritDoc}
     */
    public function setSprint(\ZectranetBundle\Entity\Sprint $sprint = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSprint', array($sprint));

        return parent::setSprint($sprint);
    }

    /**
     * {@inheritDoc}
     */
    public function getSprint()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSprint', array());

        return parent::getSprint();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner(\ZectranetBundle\Entity\User $owner = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', array($owner));

        return parent::setOwner($owner);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', array());

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function addSubtask(\ZectranetBundle\Entity\Notification $subtasks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSubtask', array($subtasks));

        return parent::addSubtask($subtasks);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSubtask(\ZectranetBundle\Entity\Notification $subtasks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSubtask', array($subtasks));

        return parent::removeSubtask($subtasks);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubtasks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubtasks', array());

        return parent::getSubtasks();
    }

    /**
     * {@inheritDoc}
     */
    public function addLog(\ZectranetBundle\Entity\TaskLog $logs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLog', array($logs));

        return parent::addLog($logs);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLog(\ZectranetBundle\Entity\TaskLog $logs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLog', array($logs));

        return parent::removeLog($logs);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogs', array());

        return parent::getLogs();
    }

    /**
     * {@inheritDoc}
     */
    public function getInArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInArray', array());

        return parent::getInArray();
    }

    /**
     * {@inheritDoc}
     */
    public function setVersionid($versionid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVersionid', array($versionid));

        return parent::setVersionid($versionid);
    }

    /**
     * {@inheritDoc}
     */
    public function getVersionid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersionid', array());

        return parent::getVersionid();
    }

    /**
     * {@inheritDoc}
     */
    public function setVersion(\ZectranetBundle\Entity\Version $version = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVersion', array($version));

        return parent::setVersion($version);
    }

    /**
     * {@inheritDoc}
     */
    public function getVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersion', array());

        return parent::getVersion();
    }

}
