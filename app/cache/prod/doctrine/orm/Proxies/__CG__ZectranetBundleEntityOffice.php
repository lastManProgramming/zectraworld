<?php

namespace Proxies\__CG__\ZectranetBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Office extends \ZectranetBundle\Entity\Office implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'id', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'name', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'description', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'ownerid', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'owner', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'users', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'projects', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'headerForums', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'QnAForums', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'postsOffice', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'officeUserRoles', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'visible', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'archived', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'profile', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'logs');
        }

        return array('__isInitialized__', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'id', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'name', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'description', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'ownerid', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'owner', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'users', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'projects', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'headerForums', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'QnAForums', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'postsOffice', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'officeUserRoles', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'visible', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'archived', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'profile', '' . "\0" . 'ZectranetBundle\\Entity\\Office' . "\0" . 'logs');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Office $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwnerid($ownerid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwnerid', array($ownerid));

        return parent::setOwnerid($ownerid);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwnerid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwnerid', array());

        return parent::getOwnerid();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner(\ZectranetBundle\Entity\User $owner = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', array($owner));

        return parent::setOwner($owner);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', array());

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function addUser(\ZectranetBundle\Entity\User $users)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUser', array($users));

        return parent::addUser($users);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUser(\ZectranetBundle\Entity\User $users)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUser', array($users));

        return parent::removeUser($users);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsers', array());

        return parent::getUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function addProject(\ZectranetBundle\Entity\Project $projects)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProject', array($projects));

        return parent::addProject($projects);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProject(\ZectranetBundle\Entity\Project $projects)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProject', array($projects));

        return parent::removeProject($projects);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjects()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjects', array());

        return parent::getProjects();
    }

    /**
     * {@inheritDoc}
     */
    public function addPostsOffice(\ZectranetBundle\Entity\OfficePost $postsOffice)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPostsOffice', array($postsOffice));

        return parent::addPostsOffice($postsOffice);
    }

    /**
     * {@inheritDoc}
     */
    public function removePostsOffice(\ZectranetBundle\Entity\OfficePost $postsOffice)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePostsOffice', array($postsOffice));

        return parent::removePostsOffice($postsOffice);
    }

    /**
     * {@inheritDoc}
     */
    public function getPostsOffice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostsOffice', array());

        return parent::getPostsOffice();
    }

    /**
     * {@inheritDoc}
     */
    public function addOfficeUserRole(\ZectranetBundle\Entity\OfficeRole $officeUserRoles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOfficeUserRole', array($officeUserRoles));

        return parent::addOfficeUserRole($officeUserRoles);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOfficeUserRole(\ZectranetBundle\Entity\OfficeRole $officeUserRoles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOfficeUserRole', array($officeUserRoles));

        return parent::removeOfficeUserRole($officeUserRoles);
    }

    /**
     * {@inheritDoc}
     */
    public function getOfficeUserRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOfficeUserRoles', array());

        return parent::getOfficeUserRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function setVisible($visible)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVisible', array($visible));

        return parent::setVisible($visible);
    }

    /**
     * {@inheritDoc}
     */
    public function getVisible()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVisible', array());

        return parent::getVisible();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsers($users)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsers', array($users));

        return parent::setUsers($users);
    }

    /**
     * {@inheritDoc}
     */
    public function getInArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInArray', array());

        return parent::getInArray();
    }

    /**
     * {@inheritDoc}
     */
    public function addHeaderForum(\ZectranetBundle\Entity\HFForum $headerForums)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addHeaderForum', array($headerForums));

        return parent::addHeaderForum($headerForums);
    }

    /**
     * {@inheritDoc}
     */
    public function removeHeaderForum(\ZectranetBundle\Entity\HFForum $headerForums)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeHeaderForum', array($headerForums));

        return parent::removeHeaderForum($headerForums);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeaderForums()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeaderForums', array());

        return parent::getHeaderForums();
    }

    /**
     * {@inheritDoc}
     */
    public function addQnAForum(\ZectranetBundle\Entity\QnAForum $qnAForums)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addQnAForum', array($qnAForums));

        return parent::addQnAForum($qnAForums);
    }

    /**
     * {@inheritDoc}
     */
    public function removeQnAForum(\ZectranetBundle\Entity\QnAForum $qnAForums)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeQnAForum', array($qnAForums));

        return parent::removeQnAForum($qnAForums);
    }

    /**
     * {@inheritDoc}
     */
    public function getQnAForums()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQnAForums', array());

        return parent::getQnAForums();
    }

    /**
     * {@inheritDoc}
     */
    public function setArchived($archived)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArchived', array($archived));

        return parent::setArchived($archived);
    }

    /**
     * {@inheritDoc}
     */
    public function getArchived()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArchived', array());

        return parent::getArchived();
    }

    /**
     * {@inheritDoc}
     */
    public function setProfile(\ZectranetBundle\Entity\OfficeProfile $profile = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProfile', array($profile));

        return parent::setProfile($profile);
    }

    /**
     * {@inheritDoc}
     */
    public function getProfile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProfile', array());

        return parent::getProfile();
    }

    /**
     * {@inheritDoc}
     */
    public function addLog(\ZectranetBundle\Entity\OfficeLog $logs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLog', array($logs));

        return parent::addLog($logs);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLog(\ZectranetBundle\Entity\OfficeLog $logs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLog', array($logs));

        return parent::removeLog($logs);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogs', array());

        return parent::getLogs();
    }

}
